// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using core_passport5.Data;

namespace core_passport5.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220617090843_final1")]
    partial class final1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("core_passport5.Models.passport", b =>
                {
                    b.Property<string>("fnum")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Applyingfor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ali22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("an217")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("anm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("branchname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cat215")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cnm23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ct42")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("czn28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ddnum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dob24")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("doe63")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("doi62")
                        .HasColumnType("datetime2");

                    b.Property<string>("dt25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dt43")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ec1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("edu214")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eml46")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emp211")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("expirydate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f711")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f712")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f713")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f714")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f715")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f716")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f717")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f718")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f719")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f720")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f721")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f722")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f723")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f724")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f725")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("filenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fnm31")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fnt35")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fpn35")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gen26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ifchange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ifreissue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isadd42")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isapp62")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("issuedate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lnm33")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mail12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mnm32")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mnt35")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mob47")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("monthandyear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mpn35")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mst27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("onm212")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pan29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passno61")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pin45")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("plcstn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pnt213")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pob25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("poffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("poi64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reg25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("snm34")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("st25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("st41")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("st44")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel48")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("toa14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("todaydate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("topb15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("txt1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vdm216")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vr16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vt210")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fnum");

                    b.ToTable("details");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
